<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker 部署Redis</title>
    <url>/2022/02/18/21422f0e6efa/</url>
    <content><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><code>Docker</code> 部署<code>redis</code>服务器，配置密码认证登陆。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>下载镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker pull redis:latest</span><br></pre></td></tr></table></figure>

<p>执行命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker -d --name redis-server -p 6379:6379 redis:latest --appendonly yes --requirepass &quot;123456&quot;</span><br></pre></td></tr></table></figure>

<p>登陆测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">redis-cli -h localhost -p 6379</span><br><span class="line">localhost:6379&gt; auth 123456</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Cloud Native</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Github搭建博客</title>
    <url>/2021/11/29/f7f2e19d8290/</url>
    <content><![CDATA[<p>使用<code>Hexo</code>搭建博客，配置<code>Next</code>主题，并搭配<code>Github</code>实现自动构建与部署。</p>
<h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在安装好的了<code>Node</code>环境中，运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line">cd blog &amp;&amp; npm install --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<h3 id="运行博客"><a href="#运行博客" class="headerlink" title="运行博客"></a>运行博客</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>访问<a href="http://localhost:4000/"><code>http://localhost:4000</code></a> 就可以看到默认博客页面了</p>
<h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd blog</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>修改站点配置文件 <code>_config.yml</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<h2 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>在<code>Github</code>上新建仓库<code>xxx.github.io</code>，其中<code>xxx</code>为<code>Github</code>用户名。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在项目根目录添加文件<code>.travis.yml</code>文件，将代码推送到<code>main</code>分支，并开通对应的<code>travis ci</code>功能。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sudo:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">14</span></span><br><span class="line"><span class="attr">cache:</span> <span class="string">npm</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># build master branch only</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span> <span class="comment"># generate static files</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">pages</span></span><br><span class="line">  <span class="attr">skip-cleanup:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github-token:</span> <span class="string">$GH_TOKEN</span></span><br><span class="line">  <span class="attr">keep-history:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">on:</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line">  <span class="attr">local-dir:</span> <span class="string">public</span></span><br></pre></td></tr></table></figure>
<p>在<code>Github Pages</code>皮配置页中，将<code>Source</code>改为<code>gh-pages</code>分支</p>
<p><img src="/images/image-20220113194914673.png" alt="image-20220113194914673"></p>
<p>等待一段时间，访问<code>https://xxx.github.io/</code>就可以看到发布后的博客了</p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>5.0+版本 的<code>hexo</code>，需要手动安装<code>swig</code>，才能使<code>Next</code>主题被正确的渲染</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i -S hexo-renderer-swig</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>JetBrains系列激活</title>
    <url>/2022/06/19/c2b8d6bab035/</url>
    <content><![CDATA[<h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p>访问<a href="https://3.jetbra.in/">链接列表</a>，选择可用链接如<a href="https://ipfs.io/ipfs/bafybeicb5ndmec4twnrohkcbadxwd3h2bso3hw7dbss3b632oq4nesdfrq/">这里</a>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://ipfs.io/ipfs/bafybeicb5ndmec4twnrohkcbadxwd3h2bso3hw7dbss3b632oq4nesdfrq/</span><br></pre></td></tr></table></figure>

<p>下载<code>jetbra.zip</code>，参考<code>readme.txt</code>参考  </p>
<p>打开<code>IDE</code>，粘贴上述站点对应的<code>ActiveCode</code>即可  </p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>optimize</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 部署Flink Kubernetes Operator</title>
    <url>/2022/07/01/141e8700bd2f/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Kubectl Client Version: v1.24.2<br>Kubernetes Server Version: v1.18.8<br>Helm version: v3.9.0</p>
</blockquote>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>部署<code>cert-manager</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl create -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml</span><br></pre></td></tr></table></figure>

<p>部署<code>flink-kubernetes-operator</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm repo add flink-operator-repo https://downloads.apache.org/flink/flink-kubernetes-operator-1.0.1/</span><br><span class="line">helm install flink-kubernetes-operator flink-operator-repo/flink-kubernetes-operator</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取消webhook, 指定镜像仓库, 命名空间，节点</span></span><br><span class="line">helm install flink-kubernetes-operator flink-operator-repo/flink-kubernetes-operator -n flink --set nodeSelector.dev=flink --set webhook.create=false --set image.repository=apache/flink-kubernetes-operator</span><br></pre></td></tr></table></figure>

<p>观察部署情况</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  ~ kubectl get pods -n flink</span><br><span class="line">NAME                                        READY   STATUS    RESTARTS   AGE</span><br><span class="line">flink-kubernetes-operator-64c56bfdd-924sc   1/1     Running   0          150m</span><br><span class="line">➜  ~ helm list</span><br><span class="line">NAME                            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                           APP VERSION</span><br><span class="line">flink-kubernetes-operator       flink           1               2022-07-01 17:27:12.2651766 +0800 CST   deployed        flink-kubernetes-operator-1.0.1 1.0.1</span><br></pre></td></tr></table></figure>

<p>运行示例任务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl create -f https://raw.githubusercontent.com/apache/flink-kubernetes-operator/release-1.0/examples/basic.yaml</span><br></pre></td></tr></table></figure>

<p>查看任务日志</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl logs -f deploy/basic-example</span><br></pre></td></tr></table></figure>

<p>删除示例任务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl delete flinkdeployment/basic-example</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Cloud Native</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>flink</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装Homebrew</title>
    <url>/2022/06/19/fae8353f74f2/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>参考<a href="https://brew.sh/">官网</a>, 命令行中输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装MySQL</title>
    <url>/2022/06/19/292c42269141/</url>
    <content><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install mysql</span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew services start mysql</span><br></pre></td></tr></table></figure>

<p>初始化安全策略与配置，参考<a href="https://rainlf.github.io/2021/11/29/Ubuntu-%E5%AE%89%E8%A3%85MySQL/">Ubuntu 安装MySQL</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure>

<p>登陆</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装Visual Studio Code</title>
    <url>/2022/06/19/c0d16b5e08af/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>前往<a href="https://code.visualstudio.com/">官网</a>，下载最新版本，复制下载链接如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://az764295.vo.msecnd.net/stable/30d9c6cd9483b2cc586687151bcbcd635f373630/VSCode-darwin-universal.zip</span><br></pre></td></tr></table></figure>
<p>海外服务器存在下载速度过慢的问题，将其中的域名替换为<code>vscode.cdn.azure.cn</code>即可，如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://vscode.cdn.azure.cn/stable/30d9c6cd9483b2cc586687151bcbcd635f373630/VSCode-darwin-universal.zip</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装Yarn</title>
    <url>/2022/06/19/eb8a48f105b9/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用<code>homebrew</code>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install yarn</span><br></pre></td></tr></table></figure>

<h2 id="配置镜像源"><a href="#配置镜像源" class="headerlink" title="配置镜像源"></a>配置镜像源</h2><p>安装<code>yrm</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yarn global add yrm</span><br></pre></td></tr></table></figure>

<p>查询可用镜像源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yrm ls</span><br></pre></td></tr></table></figure>

<p>测试镜像源，如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yrm test taobao        </span><br></pre></td></tr></table></figure>

<p>选择镜像源，如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yrm use taobao</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>yarn</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装与卸载Java</title>
    <url>/2022/02/27/f83ae2ca5951/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先前往<a href="https://www.oracle.com/java/technologies/downloads/">官方地址</a>，下载所需版本的安装文件</p>
<p>安装后修改<code>.zshrc</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JAVA_8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_321.jdk/Contents/Home</span><br><span class="line">export JAVA_11_HOME=`/usr/libexec/java_home -v 11`</span><br><span class="line">export JAVA_17_HOME=`/usr/libexec/java_home -v 17`</span><br><span class="line">export JAVA_HOME=$JAVA_17_HOME</span><br><span class="line">alias jdk8=&quot;export JAVA_HOME=$JAVA_8_HOME&quot;</span><br><span class="line">alias jdk11=&quot;export JAVA_HOME=$JAVA_11_HOME&quot;</span><br><span class="line">alias jdk17=&quot;export JAVA_HOME=$JAVA_17_HOME&quot;</span><br></pre></td></tr></table></figure>

<p>使用时，可动态切换<code>java</code>版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  ~ jdk8 &amp;&amp; java -version</span><br><span class="line">java version &quot;1.8.0_321&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_321-b07)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.321-b07, mixed mode)</span><br><span class="line">➜  ~ jdk11 &amp;&amp; java --version</span><br><span class="line">java 11.0.14 2022-01-18 LTS</span><br><span class="line">Java(TM) SE Runtime Environment 18.9 (build 11.0.14+8-LTS-263)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.14+8-LTS-263, mixed mode)</span><br><span class="line">➜  ~ jdk17 &amp;&amp; java --version</span><br><span class="line">java 17.0.2 2022-01-18 LTS</span><br><span class="line">Java(TM) SE Runtime Environment (build 17.0.2+8-LTS-86)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 17.0.2+8-LTS-86, mixed mode, sharing)</span><br></pre></td></tr></table></figure>



<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p>首先，删除系统文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class="line">sudo rm -rf /Library/PreferencesPanes/JavaControlPanel.prefPane</span><br><span class="line">sudo rm -rf ~/Library/Application\ Support/Oracle/Java</span><br></pre></td></tr></table></figure>

<p>然后，查找当前安装文件并删除即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls /Library/Java/JavaVirtualMachines/ </span><br><span class="line">sudo rm -rf /Library/Java/JavaVirtualMachines/jdk1.8.0_321.jdk</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell 判断表达式</title>
    <url>/2022/07/07/ba0f3454079b/</url>
    <content><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ condition ] &amp;&amp; echo yes || echo no</span><br></pre></td></tr></table></figure>

<h2 id="按文件类型判断"><a href="#按文件类型判断" class="headerlink" title="按文件类型判断"></a>按文件类型判断</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-e &lt;file&gt;       # 判断是否存在</span><br><span class="line">-d &lt;file&gt;       # 判断是否存在，并且为目录文件</span><br><span class="line">-f &lt;file&gt;       # 判断是否存在，并且为普通文件</span><br><span class="line">-s &lt;file&gt;       # 判断是否存在，并且为非空</span><br><span class="line">-p &lt;file&gt;       # 判断是否存在，并且为管道文件</span><br><span class="line">-b &lt;file&gt;       # 判断是否存在，并且为块设备文件</span><br><span class="line">-c &lt;file&gt;       # 判断是否存在，并且为符号设备文件</span><br><span class="line">-L &lt;file&gt;       # 判断是否存在，并且为符号链接文件</span><br><span class="line">-S &lt;file&gt;       # 判断是否存在，并且为套接字文件</span><br></pre></td></tr></table></figure>

<h2 id="按文件权限判断"><a href="#按文件权限判断" class="headerlink" title="按文件权限判断"></a>按文件权限判断</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-r &lt;file&gt;       # 判断是否存在，并且拥有读权限</span><br><span class="line">-w &lt;file&gt;       # 判断是否存在，并且拥有写权限</span><br><span class="line">-x &lt;file&gt;       # 判断是否存在，并且拥有执行权限</span><br><span class="line">-u &lt;file&gt;       # 判断是否存在，并且拥有SUID权限</span><br><span class="line">-g &lt;file&gt;       # 判断是否存在，并且拥有SGID权限</span><br><span class="line">-k &lt;file&gt;       # 判断是否存在，并且拥有SBit权限</span><br></pre></td></tr></table></figure>

<h2 id="按文件比较判断"><a href="#按文件比较判断" class="headerlink" title="按文件比较判断"></a>按文件比较判断</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;file1&gt; -nt &lt;file2&gt;     # 判断file1是否 比file2修改时间新</span><br><span class="line">&lt;file1&gt; -ot &lt;file2&gt;     # 判断file1是否 比file2修改时间旧</span><br><span class="line">&lt;file1&gt; -ef &lt;file2&gt;     # 判断file1是否 与file2Inode号一致（同一文件）</span><br></pre></td></tr></table></figure>

<h2 id="数字比较"><a href="#数字比较" class="headerlink" title="数字比较"></a>数字比较</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;num1&gt; -eq &lt;num2&gt;       # 判断num1是否等于num1</span><br><span class="line">&lt;num1&gt; -ne &lt;num2&gt;       # 判断num1是否不等于num1</span><br><span class="line">&lt;num1&gt; -gt &lt;num2&gt;       # 判断num1是否大于num1</span><br><span class="line">&lt;num1&gt; -lt &lt;num2&gt;       # 判断num1是否小于num1</span><br><span class="line">&lt;num1&gt; -ge &lt;num2&gt;       # 判断num1是否大于等于num1</span><br><span class="line">&lt;num1&gt; -le &lt;num2&gt;       # 判断num1是否小于等于num1</span><br></pre></td></tr></table></figure>

<h2 id="数字比较-1"><a href="#数字比较-1" class="headerlink" title="数字比较"></a>数字比较</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-z &lt;string&gt;         # 判断字符串是否为空</span><br><span class="line">-n &lt;string&gt;         # 判断字符串是否非空</span><br><span class="line">&lt;string1&gt; == &lt;string2&gt;         # 判断字符串是否相等</span><br><span class="line">&lt;string1&gt; != &lt;string2&gt;         # 判断字符串是否不等</span><br></pre></td></tr></table></figure>

<h2 id="组合判断"><a href="#组合判断" class="headerlink" title="组合判断"></a>组合判断</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;condition1&gt; -a &lt;condition2&gt;    # 逻辑与</span><br><span class="line">&lt;condition1&gt; -o &lt;condition2&gt;    # 逻辑或</span><br><span class="line">! &lt;condition1&gt;                  # 逻辑取反</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell 脚本整理</title>
    <url>/2022/02/28/e1274cc7b665/</url>
    <content><![CDATA[<h2 id="批量执行命令"><a href="#批量执行命令" class="headerlink" title="批量执行命令"></a>批量执行命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">! /usr/bin/bash</span></span><br><span class="line"></span><br><span class="line">cmd=$1</span><br><span class="line"></span><br><span class="line">hosts=(</span><br><span class="line">  &quot;host1&quot;</span><br><span class="line">  &quot;host2&quot;</span><br><span class="line">  &quot;host3&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">if [ &quot;x$cmd&quot; = &quot;x&quot; ]</span><br><span class="line">then</span><br><span class="line">  echo &quot;Failed: cmd can&#x27;t be empty&quot;</span><br><span class="line">  exit -1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">for host in &quot;$&#123;hosts[@]&#125;&quot;</span><br><span class="line">do</span><br><span class="line">  echo &quot;begin to run $cmd on $host&quot;</span><br><span class="line">  ssh $host $cmd</span><br><span class="line">done</span><br></pre></td></tr></table></figure>



<h2 id="批量拷贝文件"><a href="#批量拷贝文件" class="headerlink" title="批量拷贝文件"></a>批量拷贝文件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">! /usr/bin/bash</span></span><br><span class="line"></span><br><span class="line">src=$1</span><br><span class="line">dst=$2</span><br><span class="line"></span><br><span class="line">hosts=(</span><br><span class="line">  &quot;host1&quot;</span><br><span class="line">  &quot;host2&quot;</span><br><span class="line">  &quot;host3&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">if [ &quot;x$src&quot; = &quot;x&quot; -o &quot;x$dst&quot; = &quot;x&quot; ]</span><br><span class="line">then</span><br><span class="line">  echo &quot;Failed: src or dst can&#x27;t be empty&quot;</span><br><span class="line">  exit -1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">for host in &quot;$&#123;hosts[@]&#125;&quot;</span><br><span class="line">do</span><br><span class="line">  echo &quot;begin to scp $src to $host:$dst&quot;</span><br><span class="line">  scp -r $src $host:$dst</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell 控制语法</title>
    <url>/2022/07/07/e1cd445e02ee/</url>
    <content><![CDATA[<h2 id="IF-语法"><a href="#IF-语法" class="headerlink" title="IF 语法"></a>IF 语法</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ condition ]; then</span><br><span class="line">  ...</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ condition ]</span><br><span class="line">  then</span><br><span class="line">  ...</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ condition ]; then</span><br><span class="line">  ...</span><br><span class="line">elif [ condition ]; then</span><br><span class="line">  ...</span><br><span class="line">else</span><br><span class="line">  ...</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<h2 id="CASE-语法"><a href="#CASE-语法" class="headerlink" title="CASE 语法"></a>CASE 语法</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">case $var in</span><br><span class="line">  &quot;value1&quot;)</span><br><span class="line">    ...</span><br><span class="line">    ;;</span><br><span class="line">  &quot;value2&quot;)</span><br><span class="line">    ...</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>

<h2 id="FOR-语法"><a href="#FOR-语法" class="headerlink" title="FOR 语法"></a>FOR 语法</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for var in value1 value2 ...</span><br><span class="line">do</span><br><span class="line">   ... $var ...</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for ((i=1; i&lt;100; i=i+1))</span><br><span class="line">do</span><br><span class="line">  echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h2 id="WHILE-语法"><a href="#WHILE-语法" class="headerlink" title="WHILE 语法"></a>WHILE 语法</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">while [ condition ]</span><br><span class="line">do</span><br><span class="line">  ...</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Ansible</title>
    <url>/2022/07/07/535788fd6c1b/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS<br>Docker 20.10.12  </p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p><code>Ansible</code>使用<code>SSH</code>协议来管理主机，管理节点与托管节点需要建立<code>ssh</code>免密登陆通道，同时管理节点与托管节点均需要<code>Python2.7</code>环境<br>在管理节点上安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo apt-add-repository ppa:ansible/ansible</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ansible</span><br></pre></td></tr></table></figure>

<p>编辑<code>Inventory</code>文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/ansible/hosts</span><br><span class="line">---</span><br><span class="line">[group_name]</span><br><span class="line">host1</span><br><span class="line">host2</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>查看<code>ansible</code>支持的模块</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ansible-doc -l</span><br></pre></td></tr></table></figure>

<p>查看模块的详细帮助信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ansible-doc &lt;module_name&gt;</span><br></pre></td></tr></table></figure>

<p>测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ansible &lt;group or host&gt; -m ping</span><br></pre></td></tr></table></figure>

<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ansible &lt;host&gt; -a &quot;echo hello world&quot;            # 执行命令，默认使用command模块，该模块不支持管道符与重定向符号</span><br><span class="line">ansible &lt;host&gt; -m shell -a &quot;echo hello world&quot;   # 执行命令，支持管道符与重定向符号</span><br><span class="line">ansible &lt;host&gt; -copy -a &quot;src=./xx dest=~/&quot;      # 拷贝文件</span><br></pre></td></tr></table></figure>

<h2 id="PlayBook模板"><a href="#PlayBook模板" class="headerlink" title="PlayBook模板"></a>PlayBook模板</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">foo</span></span><br><span class="line">    <span class="attr">home:</span> <span class="string">/home/&#123;&#123;</span> <span class="string">user</span> <span class="string">&#125;&#125;</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">exec</span> <span class="string">shell</span> <span class="string">command</span></span><br><span class="line">    <span class="attr">shell:</span> <span class="string">cp</span> <span class="string">/tmp/xx</span> <span class="string">/tmp/yy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">exec</span> <span class="string">shell</span> <span class="string">command</span> <span class="string">with</span> <span class="string">sudo</span></span><br><span class="line">    <span class="attr">shell:</span> <span class="string">cp</span> <span class="string">/tmp/xx</span> <span class="string">/tmp/yy</span></span><br><span class="line">    <span class="attr">become:</span> <span class="literal">yes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">exec</span> <span class="string">multi</span> <span class="string">shell</span> <span class="string">command</span> <span class="string">and</span> <span class="string">without</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">shell:</span></span><br><span class="line">      <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        command 1</span></span><br><span class="line"><span class="string">        command 2</span></span><br><span class="line"><span class="string">        command ...</span></span><br><span class="line"><span class="string"></span>    <span class="attr">become:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">args:</span></span><br><span class="line">     <span class="attr">warn:</span> <span class="literal">false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">file</span></span><br><span class="line">    <span class="attr">copy:</span></span><br><span class="line">      <span class="attr">src:</span> <span class="string">./xx</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/tmp/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">and</span> <span class="string">unarchive</span> <span class="string">file</span></span><br><span class="line">    <span class="attr">unarchive:</span> </span><br><span class="line">      <span class="attr">src:</span> <span class="string">./xx.tar.gz</span></span><br><span class="line">      <span class="attr">dest:</span> <span class="string">/tmp/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">apt</span> <span class="string">install</span></span><br><span class="line">    <span class="attr">apt:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">    <span class="attr">with_items:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">package</span> <span class="number">1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">package</span> <span class="number">2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">...</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mkdir</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/tmp/bar</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mkdir</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rm</span> <span class="string">-rf</span></span><br><span class="line">    <span class="attr">file:</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">/tmp/bar</span></span><br><span class="line">      <span class="attr">state:</span> <span class="string">absent</span></span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://ansible-tran.readthedocs.io/en/latest/">Ansible中文权威指南</a></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Docker</title>
    <url>/2022/02/10/6dee69dc41c0/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS<br>Docker 20.10.12  </p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><code>Ubuntu</code>安装<code>docker</code>运行时环境，参考<a href="https://docs.docker.com/engine/install/ubuntu/">官方文档</a></p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>删除旧版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>

<p>配置仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install -y ca-certificates curl gnupg lsb-release</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line">echo &quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure>

<p>安装<code>docker</code>引擎</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure>

<p>赋予当前用户<code>docker</code>操作权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo usermod -aG docker $USER &amp;&amp; newgrp docker</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装ES+Kibana</title>
    <url>/2021/11/29/119087ddd8e0/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS<br>ElsticSearch 7.15.0<br>Kibana 7.15.0  </p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>安装 Elasticsearch + Kibana，配置密码访问</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><blockquote>
<p>在 <a href="https://www.elastic.co/downloads/">官网</a> 下载 Elasticsearch 和 Kibana，解压至安装目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo tar xvf ~/elasticsearch-7.15.0-linux-x86_64.tar.gz -C /opt/app/</span><br><span class="line">sudo tar xvf ~/kibana-7.15.0-linux-x86_64.tar.gz -C /opt/app/</span><br></pre></td></tr></table></figure>

<h3 id="Elasticsearch-配置"><a href="#Elasticsearch-配置" class="headerlink" title="Elasticsearch 配置"></a>Elasticsearch 配置</h3><blockquote>
<p>修改 <code>config/elasticsearch.yml</code>，添加内容</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">xpack.security.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.license.self_generated.type:</span> <span class="string">basic</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">discovery.type:</span> <span class="string">single-node</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动服务（非 root 用户）</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/elasticsearch -d</span><br></pre></td></tr></table></figure>

<blockquote>
<p>设置密码</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 生成 keystore</span></span></span><br><span class="line">./bin/elasticsearch-keystore create</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置密码</span></span></span><br><span class="line">./bin/elasticsearch-setup-passwords interactive</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 用户说明</span></span></span><br><span class="line">elastic: 超级用户，拥有存取全部 cluster 的权限</span><br><span class="line">apm_system: 一般用户，提供给 kibana 使用，用来和 elasticsearch 进行通信</span><br><span class="line">kibana_system: 一般用户，提供给 logstash 使用，用来向 elasticsearch 写入数据</span><br><span class="line">logstash_system: 一般用户，用于不同类型的 beat 存储和监控 elasticsearch</span><br><span class="line">beats_system: 一般用户，用于 APM Server 存储和监控 elasticsearch</span><br><span class="line">remote_monitoring_user: 一般用户，用于 Metricbeat 监控 elasticsearch</span><br></pre></td></tr></table></figure>

<h3 id="Kibana-配置"><a href="#Kibana-配置" class="headerlink" title="Kibana 配置"></a>Kibana 配置</h3><blockquote>
<p>修改 <code>config/kibana.yml</code></p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.hosts:</span> [<span class="string">&quot;http://localhost:9200&quot;</span>]</span><br><span class="line"><span class="attr">elasticsearch.username:</span> <span class="string">&quot;kibana_system&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.password:</span> <span class="string">&quot;guanshantech&quot;</span></span><br><span class="line"><span class="attr">i18n.locale:</span> <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动服务（非 root 用户）</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/kibana</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>es</tag>
        <tag>kibana</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Helm</title>
    <url>/2022/06/30/d197011c56f5/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS  </p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>点击<a href="https://github.com/helm/helm/releases">这里</a>下载所需版本，如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -LO  &quot;https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz&quot;</span><br></pre></td></tr></table></figure>

<p>解压安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf helm-v3.9.0-linux-amd64.tar.gz</span><br><span class="line">sudo install helm /usr/local/bin/helm</span><br></pre></td></tr></table></figure>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>初次安装使用时，可能遇到如下问题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/rain/.kube/config</span><br></pre></td></tr></table></figure>
<p>执行如下命令，删除同组与其他用户的读写权限即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 600 ~/.kube/config</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>ubuntu</tag>
        <tag>helm</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装JDK</title>
    <url>/2021/11/29/4b04580b4fb6/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS<br>JDK1.8  </p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>安装 JDK8，并设置相关环境变量，参考 <a href="https://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/">Oracle官方文档</a></p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>在 <a href="https://www.oracle.com/java/technologies/downloads/#java8">Oracle官方地址</a> 下载 jdk release 文件，解压文件至安装目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /usr/java/</span><br><span class="line">sudo tar xvf jdk-8u301-linux-x64.tar.gz -C /usr/java/</span><br></pre></td></tr></table></figure>

<blockquote>
<p>编辑 <code>~/.zshrc</code> （bash shell 则编辑 <code>~/.bashrc</code>）,添加内容</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_301</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装K9s</title>
    <url>/2022/06/22/8acd67c0636c/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS<br>K9s v0.25.18  </p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>点击<a href="https://github.com/derailed/k9s/releases">下载页面</a>，下载最新的<code>release</code>文件，如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -Lo k9s.tgz https://github.com/derailed/k9s/releases/download/v0.25.18/k9s_Linux_x86_64.tar.gz</span><br></pre></td></tr></table></figure>

<p>安装命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo install k9s /usr/local/bin/</span><br></pre></td></tr></table></figure>

<p>查看信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  k9s k9s info</span><br><span class="line"> ____  __.________</span><br><span class="line">|    |/ _/   __   \______</span><br><span class="line">|      &lt; \____    /  ___/</span><br><span class="line">|    |  \   /    /\___ \</span><br><span class="line">|____|__ \ /____//____  &gt;</span><br><span class="line">        \/            \/</span><br><span class="line"></span><br><span class="line">Configuration:   /home/rain/.config/k9s/config.yml</span><br><span class="line">Logs:            /tmp/k9s-rain.log</span><br><span class="line">Screen Dumps:    /tmp/k9s-screens-rain</span><br></pre></td></tr></table></figure>

<p>常用命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">List all available CLI options</span></span><br><span class="line">k9s help</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Get info about K9s runtime (logs, configs, etc..)</span></span><br><span class="line">k9s info</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Run K9s <span class="keyword">in</span> a given namespace.</span></span><br><span class="line">k9s -n k8s-ns</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Run K9s and launch <span class="keyword">in</span> pod view via the pod <span class="built_in">command</span>.</span></span><br><span class="line">k9s -c pod</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Start K9s <span class="keyword">in</span> a non default KubeConfig context</span></span><br><span class="line">k9s --context coolCtx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Start K9s <span class="keyword">in</span> <span class="built_in">readonly</span> mode - with all modification commands disabled</span></span><br><span class="line">k9s --readonly</span><br></pre></td></tr></table></figure>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p><code>Ubuntu</code>操作系统下，不要使用以下命令安装<code>k9s</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo snap install k9s</span></span><br></pre></td></tr></table></figure>
<p>该安装方式会使用沙盒模式，无法穿过<code>Ubuntu</code>的防火墙。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>ubuntu</tag>
        <tag>k9s</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Kubectl</title>
    <url>/2022/06/22/eab7442ec82d/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS  </p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载最新版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -LO &quot;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl&quot;</span><br></pre></td></tr></table></figure>

<p>下载指定版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -LO https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl</span><br></pre></td></tr></table></figure>

<p>安装命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl</span><br></pre></td></tr></table></figure>

<p>查看版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl version --client --output=yaml</span><br></pre></td></tr></table></figure>

<p>将连接信息写入<code>$HOME/.kube/config </code>，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl get namespace</span><br></pre></td></tr></table></figure>

<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl config view                         # 查看kubectl配置</span><br><span class="line">kubectl config get-contexts                 # 查看kubectl context列表</span><br><span class="line">kubectl config use-context &lt;context-name&gt;   # 设置当前context</span><br><span class="line">kubectl config current-context              # 查看当前context</span><br><span class="line">kubectl config set-context --current --namespace=&lt;namespace&gt;    # 设置当前context default namespace</span><br><span class="line"></span><br><span class="line">kubectl get node                            # 获取kubernetes节点</span><br><span class="line">kubectl get node -o wide                    # 获取kubernetes节点（展示详细信息）</span><br><span class="line">kubectl get node --show-labels              # 获取kubernetes节点（展示label信息）</span><br><span class="line"></span><br><span class="line">kubectl get pods                            # 获取pod（default namespace）</span><br><span class="line">kubectl get node -n &lt;namespace&gt;             # 获取pod（指定 namespace）</span><br><span class="line">kubectl get node --all-namespace            # 获取pod（全部 namespace）</span><br><span class="line">kubectl get pod &lt;pod-name&gt; -o yaml          # 获取pod（yaml格式）</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://kubernetes.io/docs/tasks/tools/?spm=5176.2020520152.0.0.405816ddd71VlD">kubectl install</a>  </li>
<li><a href="http://kubernetes.kansea.com/docs/user-guide/kubectl/kubectl/">kubectl command</a></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>ubuntu</tag>
        <tag>kubectl</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Maven</title>
    <url>/2021/11/29/15965a5422a2/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
<p>Maven 3.8.3</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>安装 Maven，并设置相关环境变量，参考 <a href="https://maven.apache.org/settings.html">官方文档</a></p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>在 <a href="https://www.oracle.com/java/technologies/downloads/#java8">Oracle官方地址</a> 下载 jdk release 文件，解压文件至安装目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /usr/maven/</span><br><span class="line">sudo tar xvf apache-maven-3.8.3-bin.tar.gz -C /usr/maven/</span><br></pre></td></tr></table></figure>

<blockquote>
<p>编辑 <code>~/.zshrc</code> （bash shell 则编辑 <code>~/.bashrc</code>）,添加内容</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export MAVEN_HOME=/usr/maven/apache-maven-3.8.3</span><br><span class="line">export PATH=$MAVEN_HOME/bin:$PATH</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Minikube</title>
    <url>/2022/06/22/0d648f6dff08/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS  </p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载<code>minikube</code>  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span><br></pre></td></tr></table></figure>

<p>安装命令  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo install minikube-linux-amd64 /usr/local/bin/minikube</span><br></pre></td></tr></table></figure>

<p>启动集群  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  ~ minikube start</span><br><span class="line">😄  minikube v1.25.2 on Ubuntu 20.04</span><br><span class="line">✨  Automatically selected the docker driver. Other choices: none, ssh</span><br><span class="line">👍  Starting control plane node minikube in cluster minikube</span><br><span class="line">🚜  Pulling base image ...</span><br><span class="line">💾  Downloading Kubernetes v1.23.3 preload ...</span><br><span class="line">    &gt; preloaded-images-k8s-v17-v1...: 505.68 MiB / 505.68 MiB  100.00% 634.83 K</span><br><span class="line">    &gt; index.docker.io/kicbase/sta...: 379.06 MiB / 379.06 MiB  100.00% 529.16 K</span><br><span class="line">❗  minikube was unable to download gcr.io/k8s-minikube/kicbase:v0.0.30, but successfully downloaded docker.io/kicbase/stable:v0.0.30 as a fallback image</span><br><span class="line">🔥  Creating docker container (CPUs=2, Memory=9600MB) ...</span><br><span class="line">❗  This container is having trouble accessing https://k8s.gcr.io</span><br><span class="line">💡  To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/</span><br><span class="line">🐳  Preparing Kubernetes v1.23.3 on Docker 20.10.12 ...</span><br><span class="line">    ▪ kubelet.housekeeping-interval=5m</span><br><span class="line">    ▪ Generating certificates and keys ...</span><br><span class="line">    ▪ Booting up control plane ...</span><br><span class="line">    ▪ Configuring RBAC rules ...</span><br><span class="line">🔎  Verifying Kubernetes components...</span><br><span class="line">    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5</span><br><span class="line">🌟  Enabled addons: default-storageclass, storage-provisioner</span><br><span class="line">🏄  Done! kubectl is now configured to use &quot;minikube&quot; cluster and &quot;default&quot; namespace by default</span><br></pre></td></tr></table></figure>

<p>停止集群</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">minikube stop</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://minikube.sigs.k8s.io/docs/start/">minikube start</a></li>
<li><a href="http://kubernetes.kansea.com/docs/user-guide/kubectl/kubectl/">kubectl command</a></li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>kubernetes</tag>
        <tag>ubuntu</tag>
        <tag>minikube</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装MongoDB</title>
    <url>/2021/11/29/3583e294ac11/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
<p>MongDB 5.0.3</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>使用单机搭建 mongodb repliceset 三节点伪集群</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><blockquote>
<p>安装 mongodb，参考<a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/">官方文档</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 导入公钥</span></span></span><br><span class="line">wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 新建 apt mongodb 源</span></span></span><br><span class="line">echo &quot;deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 官方源速度过慢，可使用阿里云 apt mongdb 源</span></span></span><br><span class="line">echo &quot;deb [ arch=amd64,arm64 ] https://mirrors.aliyun.com/mongodb/apt/ubuntu focal/mongodb-org/5.0 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 更新 apt 源</span></span></span><br><span class="line">sudo apt update</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 安装 mongodb</span></span></span><br><span class="line">sudo apt install -y mongodb-org</span><br></pre></td></tr></table></figure>

<blockquote>
<p>创建目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /opt/app/mongodb/&#123;db1,db2,db3&#125;/&#123;data,etc,log&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">db1: /opt/app/mongodb/db1/etc/mongodb.conf</span></span><br><span class="line">dbpath=/opt/app/mongodb/db1/data</span><br><span class="line">logpath=/opt/app/mongodb/db1/log/mongodb.log</span><br><span class="line">logappend=true</span><br><span class="line">journal=true</span><br><span class="line">bind_ip=0.0.0.0</span><br><span class="line">port=27017</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">db2: /opt/app/mongodb/db2/etc/mongodb.conf</span></span><br><span class="line">dbpath=/opt/app/mongodb/db2/data</span><br><span class="line">logpath=/opt/app/mongodb/db2/log/mongodb.log</span><br><span class="line">logappend=true</span><br><span class="line">journal=true</span><br><span class="line">bind_ip=0.0.0.0</span><br><span class="line">port=27018</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">db3: /opt/app/mongodb/db3/etc/mongodb.conf</span></span><br><span class="line">dbpath=/opt/app/mongodb/db3/data</span><br><span class="line">logpath=/opt/app/mongodb/db3/log/mongodb.log</span><br><span class="line">logappend=true</span><br><span class="line">journal=true</span><br><span class="line">bind_ip=0.0.0.0</span><br><span class="line">port=27019</span><br></pre></td></tr></table></figure>

<h3 id="认证配置"><a href="#认证配置" class="headerlink" title="认证配置"></a>认证配置</h3><blockquote>
<p>启动服务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mongod -f /opt/app/mongodb/db1/etc/mongodb.conf --replSet rs &amp;</span><br><span class="line">sudo mongod -f /opt/app/mongodb/db2/etc/mongodb.conf --replSet rs &amp;</span><br><span class="line">sudo mongod -f /opt/app/mongodb/db3/etc/mongodb.conf --replSet rs &amp;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>登陆</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongo --host localhost --port 27017</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置认证</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 创建 admin 库的 root 用户</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">use admin</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">db.createUser(&#123;user: <span class="string">&#x27;root&#x27;</span>, <span class="built_in">pwd</span>: <span class="string">&#x27;123456&#x27;</span>, roles:[&#123;role: <span class="string">&#x27;userAdminAnyDatabase&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span>&#125;, &#123;role: <span class="string">&#x27;readWriteAnyDatabase&#x27;</span>, db:<span class="string">&#x27;admin&#x27;</span>, &#123;role: <span class="string">&#x27;clusterAdmin&#x27;</span>, db:<span class="string">&#x27;admin&#x27;</span>&#125;&#125;]&#125;)</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>keyfile配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 创建 keyfile</span></span></span><br><span class="line">echo `openssl rand -base64 756` | sudo tee /opt/app/mongodb/keyfile</span><br><span class="line">sudo chmod 400 /opt/app/mongodb/keyfile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置文件中添加参数，并重启服务</span></span></span><br><span class="line">auth=true</span><br><span class="line">keyfile=/opt/app/mongodb/keyfile</span><br></pre></td></tr></table></figure>

<h3 id="副本集配置"><a href="#副本集配置" class="headerlink" title="副本集配置"></a>副本集配置</h3><blockquote>
<p>登陆其中一个节点</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mongo --host localhost --port 27017 -u root -p</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置副本集</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">config = &#123;_id: <span class="string">&#x27;rs&#x27;</span>, members: [&#123;_id: 0, host: <span class="string">&#x27;localhost:27017&#x27;</span>&#125;,&#123;_id: 1, host: <span class="string">&#x27;localhost:27018&#x27;</span>&#125;,&#123;_id: 2, host:<span class="string">&#x27;localhost:27019&#x27;</span>&#125;]&#125;</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">rs.initiate(config)</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">rs.status()</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改副本集配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例: 修改node端口</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 获取配置</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">cfg=rs.conf()</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 修改配置</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">cfg.members[0].host=<span class="string">&quot;localhost:27017&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 覆盖配置</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">rs.reconfig(cfg)</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 非primary节点需要执行</span></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">rs.reconfig(cfg, &#123;force : <span class="literal">true</span>&#125;)</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装MySQL</title>
    <url>/2021/11/29/626348ee1f96/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
<p>MySQL  v5.7.35</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>安装 MySQL Server，配置密码，并允许外网访问</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>安装 mysql-server</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install -y mysql-server</span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动服务</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure>

<blockquote>
<p>初始化配置，配置密码，全选 n，至<code>Reload privilege tables now?</code>时，选 y 即可</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>

<blockquote>
<p>允许 root 远程访问</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 登陆 mysql</span></span></span><br><span class="line">sudo mysql -uroot -p</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置权限(5.0 版本)</span></span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27; WITH GRANT OPTION;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 配置权限(8.0 版本)</span></span></span><br><span class="line">CREATE USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* to &#x27;root&#x27;@&#x27;%&#x27; WITH GRANT OPTION;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 刷新权限</span></span></span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 查看权限</span></span></span><br><span class="line">SELECT User, Host, HEX(authentication_string) FROM mysql.user;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 修改密码</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost = password(<span class="string">&#x27;123456&#x27;</span>);</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改常用配置，在 <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>文件中添加</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-client-handshake = FALSE</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">collation-server = utf8mb4_unicode_ci</span><br><span class="line">init_connect = &#x27;SET NAMES utf8mb4&#x27;</span><br><span class="line">bind-address = 0.0.0.0</span><br><span class="line"># 表名大小写敏感性</span><br><span class="line"># 0: 表名按原始字符串存储，比较时区分大小写（Linux默认）</span><br><span class="line"># 1: 表名转小写后存储，比较时不区分大小写（Windows默认）</span><br><span class="line"># 2: 表名按原始字符串存储，比较时不区分大小写（MacOS默认）</span><br><span class="line">lower_case_table_names = 1</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看常用配置</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show variables where variable_name like &#x27;character_set_%&#x27; or variable_name like &#x27;collation%&#x27;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8mb4                    |</span><br><span class="line">| character_set_connection | utf8mb4                    |</span><br><span class="line">| character_set_database   | utf8mb4                    |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8mb4                    |</span><br><span class="line">| character_set_server     | utf8mb4                    |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">| collation_connection     | utf8mb4_general_ci         |</span><br><span class="line">| collation_database       | utf8mb4_general_ci         |</span><br><span class="line">| collation_server         | utf8mb4_general_ci         |</span><br><span class="line">+--------------------------+----------------------------+</span><br></pre></td></tr></table></figure>

<blockquote>
<p>重启服务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Nacos</title>
    <url>/2021/11/29/1d6c1fbfa2be/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
<p>Nacos 2.0.3</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>安装 Nacos 服务器，修改默认密码，配置数据库存储，以集群模式运行，参考 <a href="https://nacos.io/zh-cn/docs/quick-start.html">官方文档</a></p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><blockquote>
<p>创建 nacos 用户，授权使用 nacos 数据库</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE nacos;</span><br><span class="line">CREATE USER &#x27;nacos&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br><span class="line">GRANT PRIVILEGES ON nacos.* TO &#x27;nacos&#x27;@&#x27;%&#x27;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>初始化数据库，使用 <code>conf/nacos-mysql.sql</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use nacos;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><blockquote>
<p>在 <a href="https://github.com/alibaba/nacos/releases">Github Release</a> 下载安装文件，解压至各个应用目录</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo tar xvf ~/nacos-server-2.0.3.tar.gz -C /opt/app/nacos/ &amp;&amp; sudo mv /opt/app/nacos/nacos /opt/app/nacos/nacos-1</span><br><span class="line">sudo tar xvf ~/nacos-server-2.0.3.tar.gz -C /opt/app/nacos/ &amp;&amp; sudo mv /opt/app/nacos/nacos /opt/app/nacos/nacos-2</span><br><span class="line">sudo tar xvf ~/nacos-server-2.0.3.tar.gz -C /opt/app/nacos/ &amp;&amp; sudo mv /opt/app/nacos/nacos /opt/app/nacos/nacos-3</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改配置文件 <code>conf/cluster.conf</code></p>
</blockquote>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">localhost</span>:<span class="string">8848</span></span><br><span class="line"><span class="attr">localhost</span>:<span class="string">8858</span></span><br><span class="line"><span class="attr">localhost</span>:<span class="string">8868</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改配置文件 <code>conf/application.properties</code></p>
</blockquote>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># server.port=8848/8858/8868</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://localhost:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</span></span><br><span class="line"><span class="attr">db.user</span>=<span class="string">nacos</span></span><br><span class="line"><span class="attr">db.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动服务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /opt/app/nacos/nacos-1/ &amp;&amp; sudo env PATH=$PATH ./bin/startup.sh</span><br><span class="line">cd /opt/app/nacos/nacos-2/ &amp;&amp; sudo env PATH=$PATH ./bin/startup.sh</span><br><span class="line">cd /opt/app/nacos/nacos-1/ &amp;&amp; sudo env PATH=$PATH ./bin/startup.sh</span><br></pre></td></tr></table></figure>



<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><blockquote>
<p>服务启动莫名遇到 <code>bind failed</code> 问题，原因是 nacos 2.0 后默认占用了4个端口：<br>server.port: 默认8848<br>raft port: ${server.port} - 1000<br>grpc port: ${server.port} + 1000<br>grpc port for server: ${server.port} + 1001<br>会引起意想不到的端口占用问题</p>
</blockquote>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Nginx</title>
    <url>/2021/11/29/62042bb21002/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
<p>Nginx 1.14.0</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>安装 Nginx Web 服务器</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install -y nginx</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置信息</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>

<blockquote>
<p>默认静态资源目录</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/www/html/</span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装OhMyZsh</title>
    <url>/2021/11/29/b6bbe7999072/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>使用zsh与<a href="https://ohmyz.sh/">oh-my-zsh</a>搭建日常命令行环境</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>安装 zsh</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install -y zsh</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置 zsh 为默认 shell</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>

<blockquote>
<p>安装 oh-my-zsh</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure>



<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote>
<p>安装时可能会遇到 github 访问过慢的问题，也可以将上述安装文件先保存至本地，手动指定镜像仓库来安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">REMOTE=https://codechina.csdn.net/mirrors/ohmyzsh/ohmyzsh.git ./install.sh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>zsh</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装PostgreSQL</title>
    <url>/2022/02/08/06655153a049/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS  </p>
<p>PostgresQL 14.1</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>安装<code>postgresql</code>服务器，配置远程访问。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>安装<code>postgresql</code>，参考 <a href="https://www.postgresql.org/download/linux/ubuntu/">https://www.postgresql.org/download/linux/ubuntu/</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo sh -c &#x27;echo &quot;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&quot; &gt; /etc/apt/sources.list.d/pgdg.list&#x27;</span><br><span class="line">wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install postgresql</span><br></pre></td></tr></table></figure>

<p>查看版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo -u postgres psql -c &quot;select version()&quot;;</span><br></pre></td></tr></table></figure>

<p>配置角色（仅仅超级用户和拥有<code>CREATEROLE</code>权限的角色可以创建新角色）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 登陆db</span><br><span class="line">sudo <span class="operator">-</span>u postgres psql</span><br><span class="line"># 创建角色</span><br><span class="line"><span class="keyword">create</span> role role_root login password &quot;123456&quot;;</span><br><span class="line"># 创建数据库</span><br><span class="line"><span class="keyword">create</span> database test_db;</span><br><span class="line"># 修改用户密码，并授权用户操作数据库</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> database test_db <span class="keyword">to</span> role_root;</span><br><span class="line"># 列举角色</span><br><span class="line">\dg</span><br><span class="line"># 列举数据库</span><br><span class="line">\l</span><br><span class="line"># 列举Schema</span><br><span class="line">\dn</span><br><span class="line"># 列举表</span><br><span class="line">\dt</span><br><span class="line"># 退出</span><br><span class="line">\q</span><br></pre></td></tr></table></figure>

<p>配置远程访问，修改<code> /etc/postgresql/14/main/postgresql.conf</code></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">listen_addresses</span> = <span class="string">&#x27;*&#x27;</span></span><br></pre></td></tr></table></figure>

<p>修改<code>/etc/postgresql/14/main/pg_hba.conf</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">local</span>   all             all                                     peer</span></span><br><span class="line">local   all             all                                     md5</span><br></pre></td></tr></table></figure>

<p>重启服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service postgresql restart</span><br></pre></td></tr></table></figure>

<p>连接数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">psql -U role_root -d test_db -W</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装Redis</title>
    <url>/2021/11/29/e11c532b4d46/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
<p>Redis 4.0.9</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>安装 Redis Server，配置密码，并允许外网访问</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>安装 redis-server</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install -y redis-server</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/redis/redis.conf</span><br></pre></td></tr></table></figure>

<blockquote>
<p>找到对应行，修改内容为</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bind 0.0.0.0 ::1</span><br><span class="line">protected-mode no</span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure>

<blockquote>
<p>重启服务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service redis-server restart</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 安装与配置NVM</title>
    <url>/2021/11/29/585782582d71/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>日常会遇到兼顾 nodejs 多版本的问题，使用 <a href="https://github.com/nvm-sh/nvm">nvm</a> 可以在本地切换 nodejs 版本的工具，来应对不同应用强依赖不同 nodejs 版本的问题</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>安装 nvm</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看可用版本</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvm ls-remote</span><br></pre></td></tr></table></figure>
<blockquote>
<p>安装指定版本 node</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvm install 14.7.0</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看本地版本</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvm ls</span><br></pre></td></tr></table></figure>

<blockquote>
<p>选择版本</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvm use &lt;version&gt;</span><br></pre></td></tr></table></figure>



<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote>
<p>安装时可能会遇到 github 访问过慢的问题，也可以将上述安装文件先保存至本地，手动指定镜像仓库来安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">NVM_INSTALL_GITHUB_REPO=https://codechina.csdn.net/mirrors/nvm-sh/nvm.git ./install.sh</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 工具整理</title>
    <url>/2021/11/29/784bf6d53299/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>新做的系统可能会缺失很多常用的环境和工具，这里整理出来方便统一安装</p>
</blockquote>
<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 网络工具</span></span></span><br><span class="line">sudo apt install -y net-tools</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Git</span></span></span><br><span class="line">sudo apt install -y git</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># NodeJs:16 (需要多版本则使用 nvm 替代)</span></span></span><br><span class="line">curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -</span><br><span class="line">sudo apt install -y nodejs</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 小玩具</span></span></span><br><span class="line">sudo apt install -y cmatrix</span><br><span class="line">sudo apt install -y sl</span><br></pre></td></tr></table></figure>



<h2 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 关闭交换分区</span></span></span><br><span class="line">sudo swapoff -a</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 用户管理</title>
    <url>/2021/11/29/cef3a852034e/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>Linux 默认提供 root 用户，但日常使用时推荐使用拥有 sudo 权限的普通用户</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>新建用户，指定工作目录，指定 Shell</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">useradd -d /home/admin -m -s /bin/bash admin</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置密码</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">passwd admin</span><br></pre></td></tr></table></figure>

<blockquote>
<p>删除用户时执行（会同时删除主目录）</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">userdel admin</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 配置Git</title>
    <url>/2021/11/29/44cdba52964f/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS  </p>
</blockquote>
<h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><p>编辑文件<code>~/.gitconfig</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">        name = &lt;user&gt;</span><br><span class="line">        email = &lt;email&gt;</span><br><span class="line">[credential]</span><br><span class="line">        helper = cache --timeout=8640000</span><br><span class="line">[push]</span><br><span class="line">        default = simple</span><br><span class="line">[color]</span><br><span class="line">        ui = true</span><br><span class="line">        status = auto</span><br><span class="line">        branch = auto</span><br><span class="line">[alias]</span><br><span class="line">        st = status -s</span><br><span class="line">        br = branch</span><br><span class="line">        ci = commit</span><br><span class="line">        co = checkout</span><br><span class="line">        lg = log --color --graph --pretty=format:&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit</span><br><span class="line">[filter &quot;lfs&quot;]</span><br><span class="line">        required = true</span><br><span class="line">        clean = git-lfs clean -- %f</span><br><span class="line">        smudge = git-lfs smudge -- %f</span><br><span class="line">        process = git-lfs filter-process</span><br><span class="line">[difftool &quot;sourcetree&quot;]</span><br><span class="line">        cmd = opendiff \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot;</span><br><span class="line">        path =</span><br><span class="line">[mergetool &quot;sourcetree&quot;]</span><br><span class="line">        cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot; -ancestor \&quot;$BASE\&quot; -merge \&quot;$MERGED\&quot;</span><br><span class="line">        trustExitCode = true</span><br><span class="line">[core]</span><br><span class="line">        excludesFile = ~/.gitignore</span><br><span class="line">        quotepath = false</span><br><span class="line">        whitespace = cr-at-eol</span><br><span class="line">        autocrlf = true</span><br></pre></td></tr></table></figure>



<h2 id="配置BASH显示分支名"><a href="#配置BASH显示分支名" class="headerlink" title="配置BASH显示分支名"></a>配置BASH显示分支名</h2><p>在<code>~/bashrc</code>尾部添加</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function git_branch &#123;</span><br><span class="line">    branch=&quot;`git branch 2&gt;/dev/null | grep &quot;^\*&quot; | sed -e &quot;s/^\*\ //&quot;`&quot;</span><br><span class="line">    if [ &quot;$&#123;branch&#125;&quot; != &quot;&quot; ];then</span><br><span class="line">        if [ &quot;$&#123;branch&#125;&quot; = &quot;(no branch)&quot; ];then</span><br><span class="line">            branch=&quot;(`git rev-parse --short HEAD`...)&quot;</span><br><span class="line">        fi</span><br><span class="line">        echo &quot; ($branch)&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">export PS1=&#x27;\u@\h \[\033[01;36m\]\W\[\033[01;32m\]$(git_branch)\[\033[00m\] \$ &#x27;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>config</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 配置Nginx HTTPS</title>
    <url>/2022/01/23/18004a7bc75d/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS  </p>
<p>Nginx 1.14.0</p>
</blockquote>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>上传<code>SSL</code>证书到服务器，并修改配置文件<code>/etc/nginx/nginx.conf</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">http -&gt; https</span></span><br><span class="line">  server &#123;</span><br><span class="line">		listen 80;</span><br><span class="line">		server_name www.rainlf.com;</span><br><span class="line">		return 301 https://$server_name$request_uri;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash">https configuration</span></span><br><span class="line">	server &#123;</span><br><span class="line">		listen 443 ssl;</span><br><span class="line">		server_name www.rainlf.com;</span><br><span class="line"></span><br><span class="line">      # ssl证书地址</span><br><span class="line">      ssl_certificate     /etc/nginx/ssl/ssl_rainlf_com.crt;  # pem/crt文件的路径</span><br><span class="line">      ssl_certificate_key  /etc/nginx/ssl/ssl_rainlf_com.key; # key文件的路径</span><br><span class="line"></span><br><span class="line">      # ssl验证相关配置</span><br><span class="line">      ssl_session_timeout  5m;    #缓存有效期</span><br><span class="line">      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    #加密算法</span><br><span class="line">      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议</span><br><span class="line">      ssl_prefer_server_ciphers on;   #使用服务器端的首选算法</span><br><span class="line"></span><br><span class="line">		root /var/www/html;</span><br><span class="line">		index index.html;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 配置SSH超时时间</title>
    <url>/2021/11/29/080c71595d9c/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>取消 ssh 连接的超时时间，解决连接一段时间后无法输入的问题，服务端和客户端任改其一即可</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><blockquote>
<p>编辑配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改内容</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LoginGraceTime 0</span><br><span class="line">ClientAliveInterval 30</span><br><span class="line">ClientAliveCountMax 6</span><br></pre></td></tr></table></figure>

<blockquote>
<p>重启服务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>



<h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><blockquote>
<p>编辑配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/ssh/ssh_config</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改内容</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ServerAliveInterval 30</span><br><span class="line">ServerAliveCountMax 6</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>config</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 配置Vim</title>
    <url>/2021/11/29/381f081457c5/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS  </p>
</blockquote>
<h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><p>编辑文件<code>vi ~/.vimrc</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">syntax enable</span><br><span class="line">set nu</span><br><span class="line">set syntax=on</span><br><span class="line">set showcmd</span><br><span class="line">set autoread</span><br><span class="line">set nobackup</span><br><span class="line">set ruler</span><br><span class="line">set cursorline</span><br><span class="line">set magic</span><br><span class="line">set noeb</span><br><span class="line">set smartindent</span><br><span class="line">set autoindent</span><br><span class="line">set shiftwidth=4</span><br><span class="line">set tabstop=4</span><br><span class="line">set mouse=a</span><br><span class="line">set hlsearch</span><br><span class="line">filetype on</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>config</tag>
        <tag>vi</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 配置免密Sudo</title>
    <url>/2021/11/29/fac97b58d792/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS  </p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>切记使用 <code>sudo visudo</code> 命令!<br>取消 Linux 普通用户在使用 sudo 命令时，要求输入密码的步骤<br>取消 sudo 命令对 env 的重置<br>指定 sudo 命令执行时的安全路径</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>修改配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo visudo</span><br></pre></td></tr></table></figure>

<blockquote>
<p>编辑内容</p>
</blockquote>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取消 env 重置</span></span><br><span class="line"><span class="attr">Defaults</span>        <span class="string">!env_reset</span></span><br><span class="line"><span class="comment"># 指定安全 PATH</span></span><br><span class="line"><span class="attr">Defaults</span> <span class="string">secure_path=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin&quot;</span></span><br><span class="line"><span class="comment"># 取消输入密码，在最后一行添加</span></span><br><span class="line"><span class="attr">admin</span>  <span class="string">ALL=(ALL:ALL) NOPASSWD:ALL</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>保存退出，visudo 默认使用 nano 编辑器</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">执行 ctrl+o</span><br><span class="line">提示 File Name to Write: /etc/sudoers.tmp</span><br><span class="line">执行 enter</span><br><span class="line">执行 ctrl+x</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 配置静态IP</title>
    <url>/2021/11/29/fa182683951b/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>Linux 默认由 DHCP 协议从路由获取动态 IP 地址，在某些场景下我们需要将其设置为静态 IP</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>编辑配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/network/interfaces</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改内容为</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0</span><br><span class="line">address 172.17.5.120</span><br><span class="line">netmask 255.255.255.240</span><br><span class="line">gateway 172.17.5.113</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>config</tag>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 镜像源整理</title>
    <url>/2021/11/29/d6813d5d5dee/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Ubuntu 20.04 LTS</p>
</blockquote>
<h2 id="APT-镜像源"><a href="#APT-镜像源" class="headerlink" title="APT 镜像源"></a>APT 镜像源</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><blockquote>
<p>备份配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改内容为</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>

<blockquote>
<p>执行更新</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>



<h2 id="NPM-镜像源"><a href="#NPM-镜像源" class="headerlink" title="NPM 镜像源"></a>NPM 镜像源</h2><blockquote>
<p>编辑配置文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi ~/.npmrc</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改内容为</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>


<h2 id="Anaconda-镜像源"><a href="#Anaconda-镜像源" class="headerlink" title="Anaconda 镜像源"></a>Anaconda 镜像源</h2><blockquote>
<p>编辑文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi ~/.condarc</span><br></pre></td></tr></table></figure>

<blockquote>
<p>添加</p>
</blockquote>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">channels</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">-</span> <span class="string">https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</span></span><br><span class="line">  <span class="attr">-</span> <span class="string">https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</span></span><br><span class="line">  <span class="attr">-</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span><br><span class="line">  <span class="attr">-</span> <span class="string">defaults</span></span><br><span class="line"><span class="attr">show_channel_urls</span>: <span class="string">true</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda config --show-sources</span><br><span class="line">conda clean -i</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>config</tag>
        <tag>apt</tag>
        <tag>npm</tag>
        <tag>anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title>Web站点配置隐式URL跳转</title>
    <url>/2022/01/23/faa776502b3e/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>当我们需要通过自己的域名连接到外部的站点时，<code>DNS</code> 解析的隐式 <code>URL</code>跳转是一个较好的选择。但由于使用了默认的 <code>iframe</code>代码文本，无法自定义站点的标题和图标，此时可以使用自定义的站点文件了实现效果。</p>
<h2 id="站点文件"><a href="#站点文件" class="headerlink" title="站点文件"></a>站点文件</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>I am site title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--网页标题左侧显示--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;site.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--收藏夹显示图标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;site.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;100%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;https://www.rainlf.com&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">noframes</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.rainlf.com&quot;</span>&gt;</span>Click here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">noframes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 修改默认用户目录</title>
    <url>/2022/02/16/c680b15b1445/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Windows 10 Pro  </p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>安装<code>Windows</code>系统时，将默认的用户目录调整至非系统盘。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>当 windows 连接到网络的时候有时 Sysprep 会失败，所以在进入 Audit Mode 之前，全程关闭网络连接</p>
<p>安装上 windows，重启电脑之后，当进入区域选择界面时，按下 Ctrl Shift F3 </p>
<p>这时 windows 会重启，进入 Audit Mode，然后显示一个 System Preparation Tool，将它关闭</p>
<h3 id="配置用户目录"><a href="#配置用户目录" class="headerlink" title="配置用户目录"></a>配置用户目录</h3><p>现在可以将电脑连接到网络了。</p>
<p>接下来要使用 System Preparation Tool (Sysprep) 工具来设置用户路径。这个工具会执行一个 XML 文件中的配置（也就是 unattended answer file）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">unattend</span> <span class="attr">xmlns</span>=<span class="string">&quot;urn:schemas-microsoft-com:unattend&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">settings</span> <span class="attr">pass</span>=<span class="string">&quot;oobeSystem&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">name</span>=<span class="string">&quot;Microsoft-Windows-Shell-Setup&quot;</span> <span class="attr">processorArchitecture</span>=<span class="string">&quot;amd64&quot;</span> <span class="attr">publicKeyToken</span>=<span class="string">&quot;31bf3856ad364e35&quot;</span> <span class="attr">language</span>=<span class="string">&quot;neutral&quot;</span> <span class="attr">versionScope</span>=<span class="string">&quot;nonSxS&quot;</span> <span class="attr">xmlns:wcm</span>=<span class="string">&quot;http://schemas.microsoft.com/WMIConfig/2002/State&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">FolderLocations</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProfilesDirectory</span>&gt;</span>D:\Users<span class="tag">&lt;/<span class="name">ProfilesDirectory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">FolderLocations</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">unattend</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Windows 以字母来标识盘符，但是当安装了 windows 重启之后，本来你想把用户目录安装到 d 盘，但这个盘符可能会发生改变，这个时候就会失败。</p>
<p>所以为了保证你的 d 盘盘符不变，你需要给他手动设置一下盘符，在 Audit Mode 你可以使用磁盘管理工具，先手动的将 d 盘改成 w 盘，再把它改回 d 盘</p>
<p>将这个 XML 文件保存到磁盘根目录（不能是 C 盘），例如D:\relocate.xml</p>
<h3 id="执行配置"><a href="#执行配置" class="headerlink" title="执行配置"></a>执行配置</h3><p>以管理员模式运行 cmd ，首先，确保 WMP Network Sharing Service 已停止运行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">net stop wmpnetworksvc</span><br></pre></td></tr></table></figure>

<p>然后运行命令：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">%windir%\system32\sysprep\sysprep.exe /oobe /reboot /unattend:d:\relocate.xml</span><br></pre></td></tr></table></figure>

<p>上述命令告诉系统从 Windows\System32\Sysprep 运行 Sysprep，执行 D:&#x2F;relocate.xml 中的指令，为 OOBE（the firlst boot of newly installed Windows） 重启准备系统，最后重启</p>
<p>然后就继续安装配置系统，之后新用户都会在 D:&#x2F;Users 这个目录下新建</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li>https:&#x2F;&#x2F;<em>meta.appinn.net&#x2F;t&#x2F;topic&#x2F;18899</em></li>
</ol>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>optimize</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 删除系统文件hiberfil.sys</title>
    <url>/2022/01/29/73d645e0e554/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Windows 10 Pro  </p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><code>hiberfil.sys</code>为<code>Windows</code>的系统休眠文件，如果系统磁盘紧张，可考虑禁用休眠功能以取消该文件。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>以管理员权限运行<code>PowerShell</code>，执行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">powercfg <span class="literal">-h</span> off</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>optimize</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 启动Postman后灰屏问题</title>
    <url>/2022/01/14/6d2b02659abc/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Windows 10 Pro<br>Postman v9.0.7   </p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>解决 Postman 使用或启动后，突然出现灰屏的问题</p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><blockquote>
<p>添加系统环境变量</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POSTMAN_DISABLE_GPU = true</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 子系统出现The referenced object type does not support the attempted operation的问题</title>
    <url>/2022/06/22/770b3be82aee/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Windows 10 Pro  </p>
</blockquote>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><h3 id="临时方案"><a href="#临时方案" class="headerlink" title="临时方案"></a>临时方案</h3><p>以管理员身份运行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netsh winsock reset</span><br></pre></td></tr></table></figure>

<h3 id="永久方案"><a href="#永久方案" class="headerlink" title="永久方案"></a>永久方案</h3><p>下载<code>NoLsp</code>工具</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">http://file2.happyjava.cn/NoLsp.exe</span><br></pre></td></tr></table></figure>
<p>以管理员身份运行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">.\NoLsp.exe C:\windows\system32\wsl.exe</span><br></pre></td></tr></table></figure>

<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://blog.actorsfit.com/a?ID=01700-55c208f3-575c-41be-b656-edda3df12ef0">Solve the problem that WSL2 and Proxifier cannot be used at the same time</a></li>
</ol>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>bug</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 配置IDEA Linux Terminal</title>
    <url>/2022/07/05/02cd7d0a5bef/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Windows 10 Pro  </p>
</blockquote>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>首先，需要安装<code>Linux</code>子系统  </p>
<p>然后在<code>IDEA</code>中，依次打开<code>Settings</code>-&gt;<code>Tools</code>-&gt;<code>Terminal</code><br>在<code>Application Settings</code>-&gt;<code>Shell Path</code>中配置，如下图</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32\bash.exe</span><br></pre></td></tr></table></figure>

<p><img src="/images/image-20220705124364673.png" alt="image-20220705124364673"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>optimize</tag>
        <tag>windows</tag>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 重启子系统</title>
    <url>/2022/01/14/2c7ef962ca82/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Windows 10 Pro</p>
</blockquote>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>Windows 子系统（WSL）是基于 LxssManager 服务运行的，只需将 LxssManager 重启即可</p>
</blockquote>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><blockquote>
<p>已管理员权限运行 cmd，执行</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 停止 LxssManager 服务</span><br><span class="line">net stop LxssManager</span><br><span class="line"></span><br><span class="line"># 启动 LxssManager 服务</span><br><span class="line">net start LxssManager</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 镜像源整理</title>
    <url>/2022/01/27/82a1098e82bb/</url>
    <content><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote>
<p>Windows 10 Pro</p>
</blockquote>
<h2 id="Pip-镜像源"><a href="#Pip-镜像源" class="headerlink" title="Pip 镜像源"></a>Pip 镜像源</h2><blockquote>
<p>在<code>%APPDATA%</code>目录下新建<code>\pip\pip.ini\</code>，并编辑内容</p>
</blockquote>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">[global]</span></span><br><span class="line"><span class="attr">timeout</span> = <span class="string">6000</span></span><br><span class="line"><span class="attr">trusted-host</span>=<span class="string">mirrors.aliyun.com</span></span><br><span class="line"><span class="attr">index-url</span>=<span class="string">http://mirrors.aliyun.com/pypi/simple/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip config get global.index-url</span><br></pre></td></tr></table></figure>



<h2 id="Yarn-x2F-Npm-镜像源"><a href="#Yarn-x2F-Npm-镜像源" class="headerlink" title="Yarn&#x2F;Npm 镜像源"></a>Yarn&#x2F;Npm 镜像源</h2><blockquote>
<p>配置</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yarn config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yarn config get registry</span><br></pre></td></tr></table></figure>



<h2 id="Anaconda-源"><a href="#Anaconda-源" class="headerlink" title="Anaconda 源"></a>Anaconda 源</h2><blockquote>
<p>配置</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">conda config <span class="literal">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config <span class="literal">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda<span class="literal">-forge</span> </span><br><span class="line">conda config <span class="literal">--add</span> channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line">conda config <span class="literal">--set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查看</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">conda config <span class="literal">--show-sources</span></span><br><span class="line">conda clean <span class="literal">-i</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>yarn</tag>
        <tag>config</tag>
        <tag>npm</tag>
        <tag>anaconda</tag>
        <tag>windows</tag>
        <tag>pip</tag>
      </tags>
  </entry>
  <entry>
    <title>博客升级Hexo</title>
    <url>/2022/07/04/510c203ec156/</url>
    <content><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>安装<code>npm-check</code>和<code>npm-upgrade</code>工具</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g npm-check npm-upgrade</span><br></pre></td></tr></table></figure>

<p>升级检测</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm-check</span><br></pre></td></tr></table></figure>

<p>执行升级</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm-upgrade</span><br></pre></td></tr></table></figure>

<p>保存升级</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm update -g --save</span><br></pre></td></tr></table></figure>

<p>查看<code>hexo</code>插件版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm outdated</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>博客设置Github标识角</title>
    <url>/2022/01/17/cb06e13fcb48/</url>
    <content><![CDATA[<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>在下面网站用选择自己喜欢的图标：</p>
<blockquote>
<p><a href="https://github.blog/2008-12-19-github-ribbons/">https://github.blog/2008-12-19-github-ribbons/</a>  </p>
<p><a href="https://tholman.com/github-corners/">https://tholman.com/github-corners/</a></p>
</blockquote>
<p>修改 <code>/themes/next/layout/_layout.swig</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;headband&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 刚刚复制的代码 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span> <span class="attr">itemscope</span> <span class="attr">itemtype</span>=<span class="string">&quot;http://schema.org/WPHeader&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header-inner&quot;</span>&gt;</span>&#123;% include &#x27;_partials/header/index.swig&#x27; %&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
